* Chapter 1: A Tutorial Introduction
** Running Python
   + python 有自己的shell, _ 代表是上次的计算结果
     #+begin_example
       Type "help", "copyright", "credits" or "license" for more information.
       >>> 6000 + 3344.23 + 123.4
       9467.63
       >>> _ + 1000
       10467.63
       >>>      
     #+end_example
   + 除了quit()的方式之外，还可以使用raise SystemExit来退出
     #+begin_example
       Type "help", "copyright", "credits" or "license" for more information.
       >>> print "hello world"
       hello world
       >>> raise SystemExit     
     #+end_example

** Variables and Arithmetic Expressions
   + python是一种动态语言，也就是说变量的类型是不固定的。更确切的说，是变量可以指向任意类型的数据
     #+begin_src python
       principal = 1000 ; rate = 0.05 ; numyears = 5
       year = 1principal = 1000 ; rate = 0.05 ; numyears = 5
       year = 1
       while year <= numyears
           principal = principal * ( 1 + rate)
           print "%3d %0.2f" % (year, principal)
           year += 1
     #+end_src
   + python string 的format函数很常用，用法如下
     #+begin_src python
       print format (year, "3d"), format (principal, "0.2f")
       
       # Or it can be used as string's function
       print "{0：3} {1:0.2f}".format(year, principal)
     #+end_src
** Conditionals
   + Condition 也是和常规语言差不多，只不过，python不使用括号，而是使用缩进
     #+begin_src python
       if a < b:
           pass    #Do nothing
       else:
           print "Computer says No"
     #+end_src
   + or, and, not 都是python关键字
     #+begin_src python
       if product == "game" and type == "pirate memory" \
                            and not (age < 4 or age > 8):
           print "I'll take it !"
     #+end_src
   + python没有switch的概念,都是用elif来代替的
     #+begin_src python
       if suffix == ".htm":
           content = "text/html"
       elif suffix == ".jpg":
           content = "image/jpeg"
       elif suffix == ".png":
           content = "image/png"
       else:
           raise RuntimeError("Unknown content type")
     #+end_src
** File Input and Output
   + 下面是一个python读取文件的例子
     #+begin_src python
       f = open("tmp.txt")
       line = f.readline()
       while line:
           # the trailing '.' can delete the last new line,
           # as the print will introduce a new line
           print line,        
           line = f.readline()
       f.close()
     #+end_src
   + 写入文件的时候,我们会用到 >>, 如下例:
     #+begin_src python
       f = open("out", "w")    #open file for writing
       while year <= numyears:
           principal = principal * (1 + rate)
           print >> f, "%3d %0.2f" % (year, principal)
           year += 1
       f.close()
     #+end_src
   + 在c语言里面经常见到的请输入啥啥啥到这里就是如下写法
     #+begin_src python
       import sys
       sys.stdout.write("Enter your name :")
       name = sys.stdin.readlin()
       
       # You can shortened all previous code to one line in Python 2
       
       name = raw_input("Enter your name:")
     #+end_src
** Strings
   + 在python中,单引号,双引号,甚至三引号都能代表字符串,三引号字符串甚至不需要在一行里面
   + 获取子字符串非常简单s[i:j]就可以,而且数字字符串之间相加依然是字符串
     #+begin_src python
       c = a[:5]    #"Hello"
       e = a[3:8]   #"lo Wo"
     #+end_src
   + 想要把字符串转换成数字,要靠1format() 2str() 和3repr(), 其中str()和repr()的区别
     是, str()返回print的结果,repr则是返回机器内部实际的存储方式
     #+begin_src python
       s = "The value of x is " + str(x)
       s = "The value of x is " + repr(x)
       s = "The value of x is " + format(x, "4d")     
       >>> x = 3.4
       >>> str(x)
       '3.4'
       >>> repr(x)
       '3.3999999999999999'
     #+end_src
